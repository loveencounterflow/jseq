{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/implementations.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n############################################################################################################\nTRM                       = require 'coffeenode-trm'\nrpr                       = TRM.rpr.bind TRM\nbadge                     = 'jsEq/implementations'\nlog                       = TRM.get_logger 'plain',     badge\ninfo                      = TRM.get_logger 'info',      badge\nwhisper                   = TRM.get_logger 'whisper',   badge\nalert                     = TRM.get_logger 'alert',     badge\ndebug                     = TRM.get_logger 'debug',     badge\nwarn                      = TRM.get_logger 'warn',      badge\nhelp                      = TRM.get_logger 'help',      badge\nurge                      = TRM.get_logger 'urge',      badge\npraise                    = TRM.get_logger 'praise',    badge\necho                      = TRM.echo.bind TRM\n#...........................................................................................................\n### implementations of deep equality tests: ###\nBNP                       = require 'coffeenode-bitsnpieces'\nASSERT                    = require 'assert'\nLODASH                    = require 'lodash'\nUNDERSCORE                = require 'underscore'\njkroso_equals             = require 'equals'\nothiym23_deepEqual        = require 'deeper'\nshould                    = require 'should'\nshould_equal              = require 'should-equal'\nsubstack_deep_equal       = require 'deep-equal'\njv_equals                 = require '../3rd-party/JV-jeanvincent.js'\ncjs_deep_eql              = require 'deep-eql'\njseq                      = require './eq'\njdq_deepequal             = require 'deepequal'\nassert_paranoid_equal     = require 'assert-paranoid-equal'\nis_equal                  = require 'is-equal'\n# angular                   = require 'angular'\n# warn 'Â©oganH'\ndeep_equal_ident          = require 'deep-equal-ident'\nfdq_equal                 = require 'fast-deep-equal'\n\n\n#-----------------------------------------------------------------------------------------------------------\ncustom_jseq_options =\n  'signed-zeroes':        yes\n  'functions':            no\n  'NaN':                  no\n  'properties':           no\n  'primitive-and-object': no\n\n#-----------------------------------------------------------------------------------------------------------\ncustom_jseq = jseq.new custom_jseq_options\n\n#-----------------------------------------------------------------------------------------------------------\nget_errorproof_comparator = ( test_method ) ->\n  return ( a, b ) ->\n    try\n      R = test_method a, b\n    catch error\n      if error[ 'message' ] is 'Maximum call stack size exceeded'\n        error[ 'code' ] = 'jsEq'\n        throw error\n      return false\n    return R\n\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports =\n  #.........................................................................................................\n  \"JKR: https://github.com/jkroso/equals\":\n    #.......................................................................................................\n    eq: ( a, b ) -> jkroso_equals a, b\n    ne: ( a, b ) -> not jkroso_equals a, b\n  #.........................................................................................................\n  \"ADE: NodeJS assert.deepEqual\":\n    #.......................................................................................................\n    eq: ( a, b ) ->\n      try\n        ASSERT.deepEqual a, b\n      catch error\n        return false\n      return true\n    #.......................................................................................................\n    ne: ( a, b ) ->\n      try\n        ASSERT.notDeepEqual a, b\n      catch error\n        return false\n      return true\n  #.........................................................................................................\n  \"ASE: NodeJS assert.strictEqual\":\n    #.......................................................................................................\n    eq: ( a, b ) ->\n      try\n        ASSERT.strictEqual a, b\n      catch error\n        return false\n      return true\n    #.......................................................................................................\n    ne: ( a, b ) ->\n      try\n        ASSERT.notStrictEqual a, b\n      catch error\n        return false\n      return true\n  #.........................................................................................................\n  \"ADS: NodeJS assert.deepStrictEqual\":\n    #.......................................................................................................\n    eq: ( a, b ) ->\n      try\n        ASSERT.deepStrictEqual a, b\n      catch error\n        return false\n      return true\n    #.......................................................................................................\n    ne: ( a, b ) ->\n      try\n        ASSERT.notDeepStrictEqual a, b\n      catch error\n        return false\n      return true\n  #.........................................................................................................\n  \"AEQ: NodeJS assert.equal\":\n    #.......................................................................................................\n    eq: ( a, b ) ->\n      try\n        ASSERT.equal a, b\n      catch error\n        return false\n      return true\n    #.......................................................................................................\n    ne: ( a, b ) ->\n      try\n        ASSERT.notEqual a, b\n      catch error\n        return false\n      return true\n  #.........................................................................................................\n  \"CND: CoffeeNode Bits'N'Pieces\":\n    #.......................................................................................................\n    eq: ( a, b ) -> BNP.equals a, b\n    ne: ( a, b ) -> not BNP.equals a, b\n  #.........................................................................................................\n  \"==: native ==\":\n    #.......................................................................................................\n    eq: ( a, b ) -> `a == b`\n    ne: ( a, b ) -> `a != b`\n  #.........................................................................................................\n  \"===: native ===\":\n    #.......................................................................................................\n    eq: ( a, b ) -> `a === b`\n    ne: ( a, b ) -> `a !== b`\n  #.........................................................................................................\n  \"OIS: native Object.is\":\n    #.......................................................................................................\n    eq: ( a, b ) -> Object.is a, b\n    ne: ( a, b ) -> Object.is a, b\n  #.........................................................................................................\n  \"CHA: https://github.com/chaijs/deep-eql\":\n    #.......................................................................................................\n    eq: ( a, b ) -> cjs_deep_eql a, b\n    ne: ( a, b ) -> not cjs_deep_eql a, b\n  #.........................................................................................................\n  \"o23: https://github.com/othiym23/node-deeper\":\n    #.......................................................................................................\n    eq: ( a, b ) -> othiym23_deepEqual a, b\n    ne: ( a, b ) -> not othiym23_deepEqual a, b\n  #.........................................................................................................\n  \"*JV: http://stackoverflow.com/a/6713782/256361\":\n    eq: get_errorproof_comparator jv_equals\n    ne: get_errorproof_comparator ( a, b ) -> not jv_equals a, b\n  #.........................................................................................................\n  \"DEQ: https://github.com/substack/node-deep-equal\":\n    eq: get_errorproof_comparator substack_deep_equal\n    ne: get_errorproof_comparator ( a, b ) -> not substack_deep_equal a, b\n  # #.........................................................................................................\n  # \"SH1: https://github.com/shouldjs/should.js#equal\":\n  #   #.......................................................................................................\n  #   eq: ( a, b ) ->\n  #     try\n  #       ( should a ).equal b\n  #     catch error\n  #       return false\n  #     return true\n  #   ne: ( a, b ) ->\n  #     try\n  #       ( should a ).not.equal b\n  #     catch error\n  #       return false\n  #     return true\n  # #.........................................................................................................\n  # \"SH2: https://github.com/shouldjs/should.js#eql\":\n  #   #.......................................................................................................\n  #   eq: ( a, b ) ->\n  #     try\n  #       ( should a ).eql b\n  #     catch error\n  #       return false\n  #     return true\n  #   ne: ( a, b ) ->\n  #     try\n  #       ( should a ).not.eql b\n  #     catch error\n  #       return false\n  #     return true\n  # #.........................................................................................................\n  # \"SH5: https://github.com/shouldjs/should.js#equal\":\n  #   #.......................................................................................................\n  #   eq: ( a, b ) ->\n  #     try\n  #       ( should a ).equal b\n  #     catch error\n  #       return false\n  #     return true\n  #   ne: ( a, b ) ->\n  #     try\n  #       ( should a ).equal b\n  #     catch error\n  #       return true\n  #     return false\n  # #.........................................................................................................\n  # \"SH6: https://github.com/shouldjs/should.js#eql\":\n  #   #.......................................................................................................\n  #   eq: ( a, b ) ->\n  #     try\n  #       ( should a ).eql b\n  #     catch error\n  #       return false\n  #     return true\n  #   ne: ( a, b ) ->\n  #     try\n  #       ( should a ).eql b\n  #     catch error\n  #       return true\n  #     return false\n  #.........................................................................................................\n  \"JDQ: https://github.com/JayceTDE/deepequal\":\n    #.......................................................................................................\n    eq: get_errorproof_comparator jdq_deepequal\n    ne: get_errorproof_comparator ( a, b ) -> not jdq_deepequal a, b\n  #.........................................................................................................\n  \"APE: https://github.com/dervus/assert-paranoid-equal\":\n    #.......................................................................................................\n    eq: ( a, b ) ->\n      try\n        assert_paranoid_equal.paranoidEqual a, b\n      catch error\n        return false\n      return true\n    #.......................................................................................................\n    ne: ( a, b ) ->\n      try\n        assert_paranoid_equal.notParanoidEqual a, b\n      catch error\n        return false\n      return true\n  # #.........................................................................................................\n  # \"SEQ: https://github.com/shouldjs/equal\":\n  #   #.......................................................................................................\n  #   eq: ( a, b ) -> should_equal a, b\n  #   ne: ( a, b ) -> not should_equal a, b\n  #.........................................................................................................\n  \"UDS: underscore _.isEqual\":\n    #.......................................................................................................\n    eq: ( a, b ) -> UNDERSCORE.isEqual a, b\n    ne: ( a, b ) -> not UNDERSCORE.isEqual a, b\n  #.........................................................................................................\n  \"LDS: lodash _.isEqual\":\n    #.......................................................................................................\n    eq: ( a, b ) -> LODASH.isEqual a, b\n    ne: ( a, b ) -> not LODASH.isEqual a, b\n  #.........................................................................................................\n  \"DQI: https://github.com/fkling/deep-equal-ident\":\n    #.......................................................................................................\n    eq: get_errorproof_comparator deep_equal_ident\n    ne: get_errorproof_comparator ( a, b ) -> not deep_equal_ident a, b\n  #.........................................................................................................\n  \"ISE: https://github.com/ljharb/is-equal\":\n    #.......................................................................................................\n    eq: get_errorproof_comparator is_equal\n    ne: get_errorproof_comparator ( a, b ) -> not is_equal a, b\n  # #.........................................................................................................\n  # \"ANG: https://github.com/bclinkinbeard/angular\":\n  #   #.......................................................................................................\n  #   eq: get_errorproof_comparator angular.equals\n  #   ne: get_errorproof_comparator ( a, b ) -> not angular.equals a, b\n  #.........................................................................................................\n  \"EQ: jsEq.eq\":\n    #.......................................................................................................\n    eq: get_errorproof_comparator jseq\n    ne: get_errorproof_comparator ( a, b ) -> not jseq a, b\n  #.........................................................................................................\n  \"*EQ: custom version of jsEq.eq\":\n    #.......................................................................................................\n    eq: get_errorproof_comparator custom_jseq\n    ne: get_errorproof_comparator ( a, b ) -> not custom_jseq a, b\n  #.........................................................................................................\n  \"FDQ: fast-deep-equal\": # https://github.com/epoberezkin/fast-deep-equal\n    #.......................................................................................................\n    eq: get_errorproof_comparator fdq_equal\n    ne: get_errorproof_comparator ( a, b ) -> not fdq_equal a, b\n\n\n\n"
  ]
}